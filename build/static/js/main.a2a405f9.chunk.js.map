{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","alert","className","Filter","search","handleSearchInputChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","onSubmit","type","Persons","persons","handleDeleteClick","map","name","toLowerCase","indexOf","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setSearch","infoMessage","setInfoMessage","tila","setTila","useEffect","personService","initialPersons","event","target","preventDefault","personObject","find","p","conf","window","confirm","pers","setTimeout","per","catch","error","filter","concat","returnedPerson","person","status","filtered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2a405f9.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n    // .then(response => response.data)\r\n    // .catch(error => {\r\n    //     console.log('fail')\r\n    // })\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, alert }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className={alert}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst Filter = ({ search, handleSearchInputChange }) => {\n  return (\n    <div>\n      filter shown with <input value={search} onChange={handleSearchInputChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, addPerson }) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>name: <input value={newName} onChange={handleNameChange} /></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = ({ persons, search, handleDeleteClick }) => {\n  return (\n    <div>\n      {persons.map((persons) => {\n        let lowerCaseName = persons.name.toLowerCase()\n        if (lowerCaseName.indexOf(search) > -1) {\n          return (\n            <p key={persons.name}> {persons.name} {persons.number} <button onClick={() => handleDeleteClick(persons.id)}>delete</button></p>\n          )\n        }\n        return (\n          null\n        )\n      })\n      }\n    </div>\n  )\n}\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [infoMessage, setInfoMessage] = useState('')\n  const [tila, setTila] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    //Tarkistus onko nimi jo olemassa => jos on niin ilmoitus tästä eikä tätä lisätä uudelleen\n    if (!(persons.find(p => p.name === newName))) {\n      setPersons(persons.concat(personObject))\n      setInfoMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setInfoMessage(null)\n      }, 5000)\n      setTila('add')\n      setNewName('')\n      setNewNumber('')\n\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n\n    } else { \n        const conf = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      \n        const pers = persons.find(p => p.name === newName)\n\n        if (conf) {\n          setInfoMessage(`Edited ${newName}`)\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n          setTila('edit')\n\n          personService\n            .update(pers.id, personObject)\n            .then(response => {\n              setPersons(persons.map(per => per.id !== pers.id ? per : response.data))\n            })\n            .catch(error => {\n              setTila('error')\n              setInfoMessage(`Information of ${newName} has already been removed from server`)\n              setTimeout(() => {\n                setInfoMessage(null)\n              }, 5000)\n              setPersons(persons.filter(p => p.id !== pers.id))\n            })\n        }\n\n\n\n    }\n  }\n\n\n  const handleSearchInputChange = (event) => {\n    setSearch(event.target.value.toLowerCase())\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeleteClick = (id) => {\n    const person = persons.find(per => per.id === id)\n    \n    const confirm = window.confirm(\n      `Delete ${person.name}?`\n    )\n\n    if (confirm) {\n      personService\n        .remove(id)\n        .then((response) => {\n          if (response.status === 200) {\n            setPersons(persons.filter((filtered) => filtered.id !== id))\n          }\n        })\n    }\n    setTila('error')\n    setInfoMessage(`Deleted ${person.name}`)\n    setTimeout(() => {\n      setInfoMessage(null)\n    }, 5000)\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={infoMessage} alert={tila} />\n      <Filter search={search} handleSearchInputChange={handleSearchInputChange} />\n\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} handleDeleteClick={handleDeleteClick} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}